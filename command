ðŸ”¹ Basic Setup

git config --global user.name "Your Name" â†’ Set your username (globally).

git config --global user.email "you@example.com" â†’ Set your email.

git config --list â†’ View all configurations.

ðŸ”¹ Starting a Repository

git init â†’ Initialize a new Git repository in the current folder.

git clone <url> â†’ Clone a remote repository into a local directory.

ðŸ”¹ Basic Snapshotting

git status â†’ Show modified, staged, and untracked files.

git add <file> â†’ Add a file to the staging area.

git add . â†’ Add all files to the staging area.

git reset <file> â†’ Unstage a file (remove from staging).

git commit -m "message" â†’ Commit staged changes with a message.

git commit -am "message" â†’ Add & commit tracked files in one step.

ðŸ”¹ Branching & Merging

git branch â†’ List branches.

git branch <name> â†’ Create a new branch.

git checkout <branch> â†’ Switch to another branch.

git checkout -b <name> â†’ Create and switch to a new branch.

git merge <branch> â†’ Merge a branch into the current branch.

git branch -d <name> â†’ Delete a branch.

ðŸ”¹ Viewing History

git log â†’ Show commit history.

git log --oneline â†’ Show commits in one line.

git log --graph --oneline --all â†’ Show branches and commits in graph form.

git show <commit> â†’ Show details of a commit.

git diff â†’ Show unstaged changes.

git diff --staged â†’ Show staged changes.

ðŸ”¹ Undoing Changes

git checkout -- <file> â†’ Discard changes in working directory.

git reset HEAD <file> â†’ Unstage a file but keep changes.

git revert <commit> â†’ Undo a commit by creating a new commit.

git reset --hard <commit> â†’ Reset to a specific commit (discard changes).

ðŸ”¹ Remote Repositories

git remote -v â†’ Show remote repositories.

git remote add origin <url> â†’ Add a remote repository.

git push origin <branch> â†’ Push branch to remote.

git push -u origin <branch> â†’ Push branch & set upstream.

git pull â†’ Fetch and merge changes from remote.

git fetch â†’ Download changes but donâ€™t merge.

ðŸ”¹ Stashing (Temporary Save)

git stash â†’ Save changes temporarily.

git stash pop â†’ Reapply last stash and remove it.

git stash list â†’ Show stashed changes.

git stash drop â†’ Delete a stash.

ðŸ”¹ Tagging

git tag â†’ List all tags.

git tag <name> â†’ Create a new tag.

git tag -a <name> -m "message" â†’ Create an annotated tag.

git push origin <tag> â†’ Push a tag to remote.

ðŸ”¹ Collaboration

git fetch origin â†’ Fetch all branches from remote.

git merge origin/main â†’ Merge remote main into local branch.

git pull origin main â†’ Fetch + merge from remote main.

git push origin --delete <branch> â†’ Delete a remote branch.

ðŸ”¹ Advanced / Useful Commands

git rebase <branch> â†’ Reapply commits on top of another branch.

git cherry-pick <commit> â†’ Apply a specific commit to the current branch.

git blame <file> â†’ Show who modified each line of a file.

git clean -fd â†’ Remove untracked files & directories.
